{"ast":null,"code":"export const fetchQuizQuestions = async (amount = 10) => {\n  try {\n    const response = await fetch(`https://opentdb.com/api.php?amount=10`);\n    const data = await response.json();\n    if (data.response_code !== 0 || !data.results) {\n      throw new Error('Failed to fetch questions from API');\n    }\n    return data.results.map(question => ({\n      id: Math.random(),\n      question: decodeHTML(question.question),\n      options: shuffleArray([...question.incorrect_answers, question.correct_answer].map(decodeHTML)),\n      correctAnswer: decodeHTML(question.correct_answer)\n    }));\n  } catch (error) {\n    console.error('Error fetching quiz questions:', error);\n    throw error;\n  }\n};\nconst decodeHTML = html => {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\nconst shuffleArray = array => {\n  return [...array].sort(() => Math.random() - 0.5);\n};","map":{"version":3,"names":["fetchQuizQuestions","amount","response","fetch","data","json","response_code","results","Error","map","question","id","Math","random","decodeHTML","options","shuffleArray","incorrect_answers","correct_answer","correctAnswer","error","console","html","txt","document","createElement","innerHTML","value","array","sort"],"sources":["C:/folder mata kuliah/magang dot/quiz-app-react/src/service/quizService.ts"],"sourcesContent":["import { Question } from '../types';\r\n\r\ninterface OpenTDBResponse {\r\n  response_code: number;\r\n  results: {\r\n    category: string;\r\n    type: string;\r\n    difficulty: string;\r\n    question: string;\r\n    correct_answer: string;\r\n    incorrect_answers: string[];\r\n  }[];\r\n}\r\n\r\nexport const fetchQuizQuestions = async (amount: number = 10): Promise<Question[]> => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://opentdb.com/api.php?amount=10`\r\n    );\r\n    const data: OpenTDBResponse = await response.json();\r\n\r\n    if (data.response_code !== 0 || !data.results) {\r\n      throw new Error('Failed to fetch questions from API');\r\n    }\r\n\r\n    return data.results.map((question) => ({\r\n      id: Math.random(),\r\n      question: decodeHTML(question.question),\r\n      options: shuffleArray([\r\n        ...question.incorrect_answers,\r\n        question.correct_answer\r\n      ].map(decodeHTML)),\r\n      correctAnswer: decodeHTML(question.correct_answer)\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching quiz questions:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst decodeHTML = (html: string): string => {\r\n  const txt = document.createElement('textarea');\r\n  txt.innerHTML = html;\r\n  return txt.value;\r\n};\r\n\r\nconst shuffleArray = <T>(array: T[]): T[] => {\r\n  return [...array].sort(() => Math.random() - 0.5);\r\n};"],"mappings":"AAcA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAOC,MAAc,GAAG,EAAE,KAA0B;EACpF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uCACF,CAAC;IACD,MAAMC,IAAqB,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEnD,IAAID,IAAI,CAACE,aAAa,KAAK,CAAC,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE;MAC7C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvD;IAEA,OAAOJ,IAAI,CAACG,OAAO,CAACE,GAAG,CAAEC,QAAQ,KAAM;MACrCC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBH,QAAQ,EAAEI,UAAU,CAACJ,QAAQ,CAACA,QAAQ,CAAC;MACvCK,OAAO,EAAEC,YAAY,CAAC,CACpB,GAAGN,QAAQ,CAACO,iBAAiB,EAC7BP,QAAQ,CAACQ,cAAc,CACxB,CAACT,GAAG,CAACK,UAAU,CAAC,CAAC;MAClBK,aAAa,EAAEL,UAAU,CAACJ,QAAQ,CAACQ,cAAc;IACnD,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMN,UAAU,GAAIQ,IAAY,IAAa;EAC3C,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;EAC9CF,GAAG,CAACG,SAAS,GAAGJ,IAAI;EACpB,OAAOC,GAAG,CAACI,KAAK;AAClB,CAAC;AAED,MAAMX,YAAY,GAAOY,KAAU,IAAU;EAC3C,OAAO,CAAC,GAAGA,KAAK,CAAC,CAACC,IAAI,CAAC,MAAMjB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}