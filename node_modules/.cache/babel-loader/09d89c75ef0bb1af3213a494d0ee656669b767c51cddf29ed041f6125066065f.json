{"ast":null,"code":"var _jsxFileName = \"C:\\\\folder mata kuliah\\\\tes-magang\\\\tes magang DOT\\\\quiz-app-react\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Result from \"./Result\";\nimport { saveQuizState, loadQuizState } from \"../utils/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  timeLimit\n}) => {\n  _s();\n  const [refreshKey, setRefreshKey] = useState(0); // Add this line\n  const [state, setState] = useState(() => {\n    const saved = loadQuizState();\n    return saved || {\n      currentQuestion: 0,\n      score: 0,\n      timeLeft: timeLimit,\n      answers: [],\n      isComplete: false,\n      showResult: false\n    };\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setState(prev => {\n        if (prev.timeLeft <= 0 || prev.isComplete) {\n          clearInterval(timer);\n          return {\n            ...prev,\n            isComplete: true,\n            showResult: true\n          };\n        }\n        return {\n          ...prev,\n          timeLeft: prev.timeLeft - 1\n        };\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [refreshKey]);\n  useEffect(() => {\n    saveQuizState(state);\n  }, [state]);\n  const handleAnswer = answer => {\n    const isCorrect = answer === questions[state.currentQuestion].correctAnswer;\n    setState(prev => ({\n      ...prev,\n      score: isCorrect ? prev.score + 1 : prev.score,\n      answers: [...prev.answers, answer],\n      currentQuestion: prev.currentQuestion + 1,\n      isComplete: prev.currentQuestion + 1 >= questions.length,\n      showResult: prev.currentQuestion + 1 >= questions.length\n    }));\n  };\n  const handlePrevious = () => {\n    if (state.currentQuestion > 0) {\n      setState(prev => ({\n        ...prev,\n        currentQuestion: prev.currentQuestion - 1,\n        answers: prev.answers.slice(0, -1),\n        // Remove the last answer\n        isComplete: false,\n        showResult: false\n      }));\n    }\n  };\n  const handleRetry = () => {\n    setState({\n      currentQuestion: 0,\n      score: 0,\n      timeLeft: timeLimit,\n      answers: [],\n      isComplete: false,\n      showResult: false\n    });\n    setRefreshKey(prev => prev + 1); // Add this line to trigger useEffect\n    window.scrollTo(0, 0); // Optional: scroll to top of page\n  };\n  if (state.showResult || state.timeLeft <= 0) {\n    const timeSpentSeconds = timeLimit - state.timeLeft;\n    // If timer ran out, show actual time spent. If completed early, show time taken\n    const actualTimeSpent = state.timeLeft <= 0 ? timeLimit : timeSpentSeconds;\n    return /*#__PURE__*/_jsxDEV(Result, {\n      score: state.score,\n      totalQuestions: questions.length,\n      answeredQuestions: state.answers.length,\n      timeSpent: actualTimeSpent,\n      onRetry: handleRetry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 bg-white p-6 rounded-2xl shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-100 text-blue-700 px-3 py-1 rounded-full font-semibold\",\n        children: [\"Question \", state.currentQuestion + 1, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 text-red-600 px-3 py-1 rounded-full font-semibold\",\n        children: [\"Time Left: \", Math.floor(state.timeLeft / 60), \":\", (state.timeLeft % 60).toString().padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-2xl font-semibold text-gray-800\",\n      children: questions[state.currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-4\",\n      children: questions[state.currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        className: \"w-full text-left px-4 py-3 rounded-xl bg-gradient-to-r from-blue-50 to-blue-100 border border-blue-200 hover:from-blue-100 hover:to-blue-200 transition-all duration-200 font-medium text-gray-700 shadow-sm\",\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"EDlOvfl7bXL5q68sQ7aPm/CM3XU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Result","saveQuizState","loadQuizState","jsxDEV","_jsxDEV","Quiz","questions","timeLimit","_s","refreshKey","setRefreshKey","state","setState","saved","currentQuestion","score","timeLeft","answers","isComplete","showResult","timer","setInterval","prev","clearInterval","handleAnswer","answer","isCorrect","correctAnswer","length","handlePrevious","slice","handleRetry","window","scrollTo","timeSpentSeconds","actualTimeSpent","totalQuestions","answeredQuestions","timeSpent","onRetry","fileName","_jsxFileName","lineNumber","columnNumber","className","children","Math","floor","toString","padStart","question","options","map","option","onClick","_c","$RefreshReg$"],"sources":["C:/folder mata kuliah/tes-magang/tes magang DOT/quiz-app-react/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Question } from \"../types\";\nimport Result from \"./Result\";\nimport { saveQuizState, loadQuizState } from \"../utils/storage\";\n\n\n\ninterface QuizState {\n  currentQuestion: number;\n  score: number;\n  timeLeft: number;\n  answers: string[];\n  isComplete: boolean;\n  showResult: boolean; // Add this line\n}\n\ninterface QuizProps {\n  questions: Question[];\n  timeLimit: number; // in seconds\n  timeSpent: number;\n  onTryAgain: () => void;\n  \n}\n\nconst Quiz: React.FC<QuizProps> = ({ questions, timeLimit }) => {\n  const [refreshKey, setRefreshKey] = useState(0); // Add this line\n  const [state, setState] = useState<QuizState>(() => {\n    const saved = loadQuizState();\n    return (\n      saved || {\n        currentQuestion: 0,\n        score: 0,\n        timeLeft: timeLimit,\n        answers: [],\n        isComplete: false,\n        showResult: false,\n      }\n    );\n  });\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setState((prev) => {\n        if (prev.timeLeft <= 0 || prev.isComplete) {\n          clearInterval(timer);\n          return { ...prev, isComplete: true, showResult: true };\n        }\n        return { ...prev, timeLeft: prev.timeLeft - 1 };\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [refreshKey]);\n\n  useEffect(() => {\n    saveQuizState(state);\n  }, [state]);\n\n  const handleAnswer = (answer: string) => {\n    const isCorrect = answer === questions[state.currentQuestion].correctAnswer;\n    setState((prev) => ({\n      ...prev,\n      score: isCorrect ? prev.score + 1 : prev.score,\n      answers: [...prev.answers, answer],\n      currentQuestion: prev.currentQuestion + 1,\n      isComplete: prev.currentQuestion + 1 >= questions.length,\n      showResult: prev.currentQuestion + 1 >= questions.length,\n    }));\n  };\n\n  const handlePrevious = () => {\n  if (state.currentQuestion > 0) {\n    setState(prev => ({\n      ...prev,\n      currentQuestion: prev.currentQuestion - 1,\n      answers: prev.answers.slice(0, -1), // Remove the last answer\n      isComplete: false,\n      showResult: false\n    }));\n  }\n};\n\n  const handleRetry = () => {\n    setState({\n      currentQuestion: 0,\n      score: 0,\n      timeLeft: timeLimit,\n      answers: [],\n      isComplete: false,\n      showResult: false,\n    });\n    setRefreshKey(prev => prev + 1); // Add this line to trigger useEffect\n    window.scrollTo(0, 0); // Optional: scroll to top of page\n  };\n  \n\n  if (state.showResult || state.timeLeft <= 0) {\n    const timeSpentSeconds = timeLimit - state.timeLeft;\n    // If timer ran out, show actual time spent. If completed early, show time taken\n    const actualTimeSpent = state.timeLeft <= 0 ? timeLimit : timeSpentSeconds;\n    \n    return (\n      <Result\n        score={state.score}\n        totalQuestions={questions.length}\n        answeredQuestions={state.answers.length}\n        timeSpent={actualTimeSpent}\n        onRetry={handleRetry}\n      />\n    );\n  }\n\n  return (\n    <div className=\"space-y-6 bg-white p-6 rounded-2xl shadow-xl\">\n  <div className=\"flex justify-between items-center text-sm text-gray-600\">\n    <div className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded-full font-semibold\">\n      Question {state.currentQuestion + 1} / {questions.length}\n    </div>\n    <div className=\"bg-red-100 text-red-600 px-3 py-1 rounded-full font-semibold\">\n      Time Left: {Math.floor(state.timeLeft / 60)}:{(state.timeLeft % 60).toString().padStart(2, '0')}\n    </div>\n  </div>\n\n  <div className=\"text-2xl font-semibold text-gray-800\">\n    {questions[state.currentQuestion].question}\n  </div>\n\n  <div className=\"grid grid-cols-1 gap-4\">\n    {questions[state.currentQuestion].options.map((option) => (\n      <button\n        key={option}\n        onClick={() => handleAnswer(option)}\n        className=\"w-full text-left px-4 py-3 rounded-xl bg-gradient-to-r from-blue-50 to-blue-100 border border-blue-200 hover:from-blue-100 hover:to-blue-200 transition-all duration-200 font-medium text-gray-700 shadow-sm\"\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n</div>\n\n  );\n  \n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}